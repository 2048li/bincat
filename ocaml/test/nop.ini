[settings]
mode = protected
call-conv = stdcall
mem-sz = 32
op-sz = 32
stack-width = 32

[x86]
#Linux 32-bits
mem_model = flat
GDT[0] = 0x0000000000000000
GDT[1] = 0x0000000000000000
GDT[2] = 0x0000000000000000
GDT[3] = 0x0000000000000000
GDT[4] = 0x0000000000000000
GDT[5] = 0x0000000000000000
GDT[6] = 0x0000000000000000
GDT[7] = 0x0000000000000000
GDT[8] = 0x0000000000000000
GDT[9] = 0x0000000000000000
GDT[10] = 0x0000000000000000
GDT[11] = 0x0000000000000000
GDT[12] = 0x0000ffff00cf9b00
GDT[13] = 0x0000ffff00cf9300
GDT[14] = 0x0000ffff00cffb00
GDT[15] = 0x0000ffff00cff300
GDT[16] = 0xfac0206bf7008bb7
GDT[17] = 0xd0000fffd4008254
GDT[18] = 0x0000ffff00409a00
GDT[19] = 0x0000ffff00009a00
GDT[20] = 0x0000ffff00009200
GDT[21] = 0x0000000000009200
GDT[22] = 0x0000000000009200
GDT[23] = 0x0000ffff00409a00
GDT[24] = 0x0000ffff00009a00
GDT[25] = 0x0000ffff00409200
GDT[26] = 0x0000ffff00cf9200
GDT[27] = 0x0000ffff368f9325
GDT[28] = 0x1c800018f74091b8
GDT[29] = 0x0000000000000000
GDT[30] = 0x0000000000000000
GDT[31] = 0x8800206bc1008980
cs = 0x73
ds = 0x7b
ss = 0x7b
es = 0x7b
ds = 0x00
fs = 0x00
gs = 0x33

[loader]
entrypoint = 0x00
#physical address of the start of the instruction sequence
phys-code-addr = 0x00
#number of bytes of the instruction sequence
code-length = 1
rva-code = 0x00

[binary]
filepath = nop.bin
format = pe


[analyzer]
ini_version = 2
unroll = 5
#list here all the values of the instruction pointers that will *not* be analyzed. Addresses must be absolute (also called direct)
cut = 0x01, 0x02
store_marshalled_cfa = true
in_marshalled_cfa_file = incfa.marshal
out_marshalled_cfa_file = outcfa.marshal
analysis = forward_binary

[state]
reg[eax] = 0x01 ! 0xff ? 0xf0
reg[ebx] = 0x02
reg[ecx] = 0x03
reg[edi] = 0x04
reg[esi] = 0x05
reg[esp] = 0x30
reg[ebp] = 0x07

#here addresses are supposed to be absolute and not of the form ds:o
mem[0x01] = 0x1234567812345678 ! 0xff
stack[0x10*32] = 0xff ? 0xff ! 0xff
heap[0x1000] = 0xff ? 0xff

[libc]
#tainting rules for libc
#default calling convention for this lib
#call-conv = fastcall
* = open(@, _)
#read uses a different calling convention
* = read<stdcall>(@, *, @)

[imports]
0x04 = libc,"open"

[assert]
#check that whatever the parameters of the function at address 0x06 are, its return value is untainted. If it not the case then the analyzer halts 
#U = (Call 0x06) (_, _, _)
