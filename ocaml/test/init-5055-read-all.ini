[settings]
mem_model = flat
mode = protected
call_conv = cdecl
mem_sz = 32
op_sz = 32
stack_width = 32

[GDT]
#Linux 32-bits
GDT[1] = 0x00cf9b000000ffff
GDT[2] = 0x00cf93000000ffff
GDT[3] = 0x00cffb000000ffff
GDT[4] = 0x00cff3000000ffff
GDT[5] = 0x80008b04200020ab
GDT[6] = 0xffc093dff0000001
GDT[7] = 0x0040f30000000fff
GDT[8] = 0x0000f2000400ffff

[loader]
cs = 0x1b
ds = 0x23
ss = 0x23
es = 0x23
fs = 0x3b
gs = 0x00
analysis_ep = 0x0
code_phys = 0x0
#number of bytes of the instruction sequence
code_length = 2
code_va = 0x0

[binary]
#filepath = ChallengeN1.exe
filepath = file.bin
format = pe


[analyzer]
ini_version = 1
unroll = 5
dotfile = cfa.dot
store_marshalled_cfa = true
out_marshalled_cfa_file = cfaout.marshal
in_marshalled_cfa_file = cfain.marshal
analysis = forward_binary

[state]
reg[eax] = 0x01 ! 0xff ? 0xf0
reg[ebx] = 0x02
reg[ecx] = 0x03
reg[edi] = 0x04
reg[esi] = 0x05
reg[esp] = 0x10006
reg[ebp] = 0x10007

#here addresses are supXposed to be absolute and not of the form ds:o
mem[0x01] = 0x1234567812345678 ! 0xff
[libc]
#tainting rules for libc
#default calling convention for this lib
# call_conv = fastcall
* = open(@, _)
#read uses a different calling convention
* = read<stdcall>(@, *, @)


